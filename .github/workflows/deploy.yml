name: Deploy to Self-hosted Runner

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: self-hosted

    env:
      DOCKER_IMAGE: ${{ vars.BOT_NAME }}
      CONTAINER_NAME: ${{ vars.BOT_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} .

      - name: Stop and remove old Docker container
        run: |
          # Check if container exists and is running
          if docker ps -a --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
            echo "Stopping and removing existing container..."
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true
          else
            echo "No existing container found"
          fi

      - name: Run Docker container
        run: |
          docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            --restart unless-stopped \
            -v /root/data/${{ env.CONTAINER_NAME }}:/app/data \
            -e BOT_NAME=${{ vars.BOT_NAME }} \
            -p 8009:8009 \
            --cpus="0.30" \
            ${{ env.DOCKER_IMAGE }}
      - name: Verify container is running
        run: |
            sleep 10
            if [ "$(docker ps -q -f name=${{ env.CONTAINER_NAME }})" ]; then
                echo "Container is running"
            else
                echo "Container failed to start"
                exit 1
            fi

      - name: Set up credentials
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
        run: |
          echo "{\"installed\":{\"client_id\":\"$GOOGLE_CLIENT_ID\",\"project_id\":\"$GOOGLE_PROJECT_ID\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_secret\":\"$GOOGLE_CLIENT_SECRET\",\"redirect_uris\":[\"http://localhost\"]}}" > credentials.json